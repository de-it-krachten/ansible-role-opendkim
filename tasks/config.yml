---

- name: Configure OpenDKIM setttings
  ansible.builtin.lineinfile:
    path: /etc/opendkim.conf
    line: "{{ item.key }} {{ item.value }}"
    regexp: "{{ item.key }}(\\s)+.*"
  loop: "{{ opendkim_settings | dict2items }}"
  notify: Restart opendkim

- name: Disable KeyFile
  ansible.builtin.replace:
    path: /etc/opendkim.conf
    replace: "#KeyFile"
    regexp: "^KeyFile"
  notify: Restart opendkim

- name: Create /etc/opendkim/keys
  ansible.builtin.file:
    path: /etc/opendkim/keys
    state: directory
    owner: root
    group: "{{ opendkim_group }}"
    mode: "0750"
  notify: Restart opendkim
  when: ansible_os_family == 'Debian'

- name: Configure default for Debian
  ansible.builtin.lineinfile:
    path: /etc/default/opendkim
    line: "Socket  inet:8891@localhost"
    regexp: "Socket .*"
    owner: "{{ opendkim_user }}"
    group: "{{ opendkim_group }}"
    mode: "0644"
  notify: Restart opendkim
  when: ansible_os_family == 'Debian'

- name: Setup KeyTable
  ansible.builtin.lineinfile:
    path: /etc/opendkim/KeyTable
    line: "key._domainkey.{{ item }}     {{ item }}:key:{{ opendkim_private_key }}"
    create: yes
    owner: "{{ opendkim_user }}"
    group: "{{ opendkim_group }}"
    mode: "0640"
  loop: "{{ opendkim_domains }}"
  notify: Restart opendkim

- name: Setup SigningTable
  ansible.builtin.lineinfile:
    path: /etc/opendkim/SigningTable
    line: "*@{{ item }} key._domainkey.{{ item }}"
    create: yes
    owner: "{{ opendkim_user }}"
    group: "{{ opendkim_group }}"
    mode: "0640"
  loop: "{{ opendkim_domains }}"
  notify: Restart opendkim

- name: Setup TrustedHosts
  ansible.builtin.lineinfile:
    path: /etc/opendkim/TrustedHosts
    line: "*.{{ item }}"
    create: yes
    owner: "{{ opendkim_user }}"
    group: "{{ opendkim_group }}"
    mode: "0640"
  loop: "{{ opendkim_domains }}"
  notify: Restart opendkim

- name: Create private key
  community.crypto.openssl_privatekey:
    path: "{{ opendkim_private_key }}"
    size: "{{ opendkim_key_bits }}"
    owner: "{{ opendkim_user }}"
    group: "{{ opendkim_group }}"
  notify: Restart opendkim

- name: Extract public key from private key
  community.crypto.openssl_publickey:
    path: "{{ opendkim_public_key }}"
    privatekey_path: "{{ opendkim_private_key }}"
    owner: "{{ opendkim_user }}"
    group: "{{ opendkim_group }}"
  notify: Restart opendkim

- name: Convert public key
  ansible.builtin.shell: |
    set -o pipefail
    sed "/PUBLIC/d" {{ opendkim_public_key }} | tr -d '\n'
  args:
    executable: /bin/bash
  changed_when: false
  notify: Restart opendkim
  register: _pubkey
